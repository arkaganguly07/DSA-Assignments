LIFO (Last In First Out):
This strategy states that the element that is inserted last will come out first. You can take a pile of plates kept on top of each other as a real-life example. The plate which we put last is on the top and since we remove the plate that is at the top, we can say that the plate that was put last comes out first.

Basic Operations on Stack:
-> push() to insert an element into the stack
-> pop() to remove an element from the stack
-> top() Returns the top element of the stack.
-> isEmpty() returns true is stack is empty else false.
-> size() returns the size of stack.

Complexity Analysis:
   Operations  	Complexity
     push()         O(1)
     pop()          O(1)
    isEmpty()       O(1)
     size()         O(1)

Applications of the stack:
-> Infix to Postfix/Prefix conversion
-> Redo-undo features at many places like editors, photoshop.
-> Forward and backward features in web browsers
-> Used in many algorithms like Tower of Hanoi, tree traversals, stock span problems, and histogram problems.
-> Backtracking is one of the algorithm designing techniques. Some examples of backtracking are the Knight-Tour problem, N-Queen problem, find your way through a maze, and game-like chess or checkers in all these problems we dive into someway if that way is not efficient we come back to the previous state and go into some another path. To get back from a current state we need to store the previous state for that purpose we need a stack.
-> In Graph Algorithms like Topological Sorting and Strongly Connected Components
-> In Memory management, any modern computer uses a stack as the primary management for a running purpose. Each program that is running in a computer system has its own memory allocations
-> String reversal is also another application of stack. Here one by one each character gets inserted into the stack. So the first character of the string is on the bottom of the stack and the last element of a string is on the top of the stack. After Performing the pop operations on the stack we get a string in reverse order.
-> Stack also helps in implementing function call in computers. The last called function is always completed first.
-> Stacks are also used to implement the undo/redo operation in text editor.

Implementation of Stack:
There are two ways to implement a stack:-
-> Using array
-> Using linked list

Implementing Stack using Arrays:
✔ Advantages of array implementation:-
-> Easy to implement.
-> Memory is saved as pointers are not involved.

✔ Disadvantages of array implementation:-
-> It is not dynamic i.e., it doesn’t grow and shrink depending on needs at runtime. [But in case of dynamic sized arrays like vector in C++, list in Python, ArrayList in Java, stacks can grow and shrink with array implementation as well].
-> The total size of the stack must be defined beforehand.

Implementing Stack using Linked List:
✔ Advantages of Linked List implementation:-
-> The linked list implementation of a stack can grow and shrink according to the needs at runtime.
-> It is used in many virtual machines like JVM.

✔ Disadvantages of Linked List implementation:-
-> Requires extra memory due to the involvement of pointers.
-> Random accessing is not possible in stack.

Advantages of Stack:
-> Stacks are be used for systematic Memory Management.
-> Stack helps in managing data that follows the LIFO technique.
-> It is used in many virtual machines like JVM.
-> When a function is called, the local variables and other function parameters are stored in the stack and automatically destroyed once returned from the function. Hence, efficient function management.
-> Stacks are more secure and reliable as they do not get corrupted easily.
-> Stack allows control over memory allocation and deallocation.
-> Stack cleans up the objects automatically.

Disadvantages of Stack: 
-> Stack memory is of limited size.
-> The total of size of the stack must be defined before.
-> If too many objects are created then it can lead to stack overflow.
-> Random accessing is not possible in stack.
-> If the stack falls outside the memory it can lead to abnormal termination.